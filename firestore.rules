
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an authenticated System Admin
    function isSystemAdmin() {
      return request.auth != null && request.auth.token.role == 'system-admin';
    }

    // Helper function to check if the user is authenticated and belongs to the school
    function isSchoolMember(schoolId) {
      return request.auth != null && request.auth.token.schoolId == schoolId;
    }

    // Helper function to check if a user is an authenticated Head Teacher or Admin for a specific school
    function isSchoolAdmin(schoolId) {
      return request.auth != null &&
             request.auth.token.schoolId == schoolId &&
             request.auth.token.role in ['head-teacher', 'primary-admin', 'system-admin', 'assistant-head-teacher'];
    }
    
    // Allow any authenticated user to write to the test collection for connection testing
    match /test_connection/{docId} {
      allow write: if request.auth != null;
    }

    // Schools: Only System Admins can manage school documents
    match /schools/{schoolId} {
      allow read, write: if isSystemAdmin();
    }

    // Users: Only System Admins can manage user role documents
    match /users/{userId} {
      allow read, write: if isSystemAdmin();
    }

    // Staff Records: School admins can manage staff for their own school
    match /staff/{staffId} {
      allow read, delete: if isSchoolAdmin(resource.data.schoolId);
      // For create/update, check the incoming data's schoolId
      allow create, update: if isSchoolAdmin(request.resource.data.schoolId);
    }

    // Counselling Records: School members can create, but only admins can view/manage
    match /counselling/{recordId} {
      allow read, update, delete: if isSchoolAdmin(resource.data.schoolId);
      allow create: if isSchoolMember(request.resource.data.schoolId);
    }
    
    // Disciplinary Records
    match /disciplinary/{recordId} {
      allow read, update, delete: if isSchoolAdmin(resource.data.schoolId);
      allow create: if isSchoolMember(request.resource.data.schoolId);
    }
    
    // OHS Records
    match /ohs/{recordId} {
      allow read, update, delete: if isSchoolAdmin(resource.data.schoolId);
      allow create: if isSchoolMember(request.resource.data.schoolId);
    }
    
    // Library Books
    match /books/{bookId} {
       allow read: if request.auth != null; // Any authenticated user can see books
       allow create, update, delete: if isSchoolAdmin(request.resource.data.schoolId);
    }

    // Library Transactions
    match /transactions/{transactionId} {
        allow read, delete: if isSchoolMember(resource.data.schoolId);
        allow create: if isSchoolMember(request.resource.data.schoolId);
    }

    // Exam Results
    match /examResults/{resultId} {
       allow read, update, delete: if isSchoolAdmin(resource.data.schoolId);
       allow create: if isSchoolMember(request.resource.data.schoolId);
    }
  }
}
