rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all access to prevent unauthorized reads/writes.
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow any authenticated user to read from public or semi-public collections.
    match /schools/{schoolId} {
      allow read: if request.auth != null;
    }
    match /staff/{staffId} {
      allow read: if request.auth != null;
    }
    match /books/{bookId} {
      allow read: if request.auth != null;
    }
    match /examResults/{resultId} {
      allow read: if request.auth != null;
    }

    // Allow authenticated users to write data.
    // This rule is broad for the seeding process.
    // For production, you should add more granular checks,
    // e.g., allow write: if request.auth.uid == resource.data.userId;
    match /{collection}/{docId} {
        allow write: if request.auth != null;
    }

    // Allow authenticated users to read and write from these collections.
    match /counselling/{recordId} {
      allow read, write: if request.auth != null;
    }
    match /disciplinary/{recordId} {
      allow read, write: if request.auth != null;
    }
     match /ohs/{recordId} {
      allow read, write: if request.auth != null;
    }
     match /transactions/{transactionId} {
        allow read, write: if request.auth != null;
    }
  }
}
