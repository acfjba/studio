
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserFromSchool(schoolId) {
      return request.auth.token.schoolId == schoolId;
    }
    function isSystemAdmin() {
      return request.auth.token.role == 'system-admin';
    }

    // 1) Test‑connection: allow any signed‑in user to create a doc
    match /test_connection/{testId} {
      allow create: if request.auth != null;
      // (optionally allow read/delete so you can inspect it)
      allow read, delete: if request.auth != null;
    }
    match /test_connection_uscentral1/{testId} {
        allow create: if request.auth != null;
        allow read, delete: if request.auth != null;
    }

    // 2) School‑scoped collections
    match /counselling/{recordId} {
      allow create: if isSystemAdmin()
                    || isUserFromSchool(request.resource.data.schoolId);
      allow read, update, delete: if isSystemAdmin()
                                  || isUserFromSchool(resource.data.schoolId);
    }
    match /disciplinary/{recordId} {
      allow create: if isSystemAdmin()
                    || isUserFromSchool(request.resource.data.schoolId);
      allow read, update, delete: if isSystemAdmin()
                                  || isUserFromSchool(resource.data.schoolId);
    }
    match /ohs/{recordId} {
      allow create: if isSystemAdmin()
                    || isUserFromSchool(request.resource.data.schoolId);
      allow read, update, delete: if isSystemAdmin()
                                  || isUserFromSchool(resource.data.schoolId);
    }
    match /books/{bookId} {
      allow create: if isSystemAdmin()
                    || isUserFromSchool(request.resource.data.schoolId);
      allow read, update, delete: if isSystemAdmin()
                                  || isUserFromSchool(resource.data.schoolId);
    }
    match /transactions/{transactionId} {
      allow create: if isSystemAdmin()
                    || isUserFromSchool(request.resource.data.schoolId);
      allow read, update, delete: if isSystemAdmin()
                                  || isUserFromSchool(resource.data.schoolId);
    }
    match /staff/{staffId} {
      allow create: if isSystemAdmin()
                    || isUserFromSchool(request.resource.data.schoolId);
      allow read, update, delete: if isSystemAdmin()
                                  || isUserFromSchool(resource.data.schoolId);
    }
    match /examResults/{resultId} {
      allow create: if isSystemAdmin()
                    || isUserFromSchool(request.resource.data.schoolId);
      allow read, update, delete: if isSystemAdmin()
                                  || isUserFromSchool(resource.data.schoolId);
    }

    // 3) Users: only system‑admins can write, but users can read their own doc
    match /users/{userId} {
      allow read: if isSystemAdmin() || request.auth.uid == userId;
      allow create, update, delete: if isSystemAdmin();
    }
    
    // 4) Schools collection: allow read for authenticated users, write for admins
    match /schools/{schoolId} {
      allow read: if request.auth != null;
      allow write: if isSystemAdmin();
    }

    // Deny any other access
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
